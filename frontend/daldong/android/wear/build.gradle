plugins {
    // 아래와 같은 형식으로 넣어야 함, 형식이 변경 됨
//    id 'com.google.dagger.hilt.android' version '2.43.2' apply false

//    id 'com.android.application' version libs.plugins.com.android.application apply false
//    id 'org.jetbrains.kotlin.android' version libs.plugins.com.android.application apply false
//    id 'org.jetbrains.kotlin.kapt' version libs.plugins.com.android.application apply false
//    id 'dagger.hilt.android.plugin' version '2.43.2' apply false

//    alias(libs.plugins.com.android.application) apply(false)
//    alias(libs.plugins.dagger.hilt) apply(false)
//    alias (libs.plugins.org.jetbrains.kotlin.android) apply(false)

    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'dagger.hilt.android.plugin'
}

// key.properties 파일 읽기
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace 'com.ssafy.daldong'
    compileSdk 33

    defaultConfig {
        applicationId "com.ssafy.daldong"
        minSdk 30
        targetSdk 30
        versionCode 1
        versionName "1.0"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            //signingConfig signingConfigs.debug로 되어있는데 signingConfig signingConfigs.release로 수정해준다.
            signingConfig signingConfigs.release

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
//        kotlinCompilerExtensionVersion '1.2.0'
        kotlinCompilerExtensionVersion libs.versions.compose.get()
    }
    packagingOptions {
        pickFirst 'data.proto'
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    // Compose for Wear OS Dependencies
//    implementation 'androidx.compose.material:material-icons-extended:1.4.2'
//    implementation 'androidx.compose.runtime:runtime:1.4.2'
//
//    implementation 'com.google.guava:guava:31.1-jre'
//    implementation "androidx.concurrent:concurrent-futures-ktx:1.1.0"
//
//    //Wear OS Compose Navigation
//    implementation "androidx.wear.compose:compose-navigation:$wear_compose_version"
//
//    //Wear Health Services
//    implementation "androidx.health:health-services-client:1.0.0-beta02"
//
//    // Lifecycle components
//    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
//    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
//    implementation "androidx.lifecycle:lifecycle-common-java8:2.5.1"
//    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
//    implementation "androidx.lifecycle:lifecycle-service:2.5.1"
//    implementation 'androidx.compose.runtime:runtime-livedata:1.4.0-alpha04'
//    implementation 'androidx.lifecycle:lifecycle-runtime-compose:2.6.0-alpha04'
//
//    // Ongoing Activity
//    implementation "androidx.wear:wear-ongoing:$wear_compose_version"
//
    // Hilt
//    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
//    implementation 'com.google.dagger:hilt-android:2.46'
//
    // Testing
//    testImplementation "junit:junit:4.13.2"
//    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

//    implementation 'androidx.core:core-ktx:1.7.0'
//    implementation 'com.google.android.gms:play-services-wearable:18.0.0'
//    implementation 'androidx.percentlayout:percentlayout:1.0.0'
//    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
//    implementation 'androidx.recyclerview:recyclerview:1.3.0'
//    implementation "androidx.compose.ui:ui:$compose_version"
//    implementation "androidx.wear.compose:compose-material:$wear_compose_version"
//    implementation "androidx.wear.compose:compose-foundation:$wear_compose_version"
//    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
//    implementation 'androidx.activity:activity-compose:1.3.1'
//    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
//    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
//    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    // General compose dependencies
    implementation libs.androidx.activity.compose
    implementation libs.compose.ui.tooling.preview

    // Compose for Wear OS Dependencies
    implementation libs.wear.compose.material
    implementation 'androidx.compose.material:material-icons-extended:1.3.1'
    implementation libs.androidx.wear
    implementation libs.androidx.compose.runtime

    // Foundation is additive, so you can use the mobile version in your Wear OS app.
    implementation libs.wear.compose.foundation

    implementation libs.guava
    implementation libs.androidx.concurrent

    //Wear OS Compose Navigation
    implementation libs.compose.wear.navigation
    implementation libs.androidx.compose.navigation

    //Wear Health Services
    implementation libs.androidx.health.services

    // Lifecycle components
    implementation libs.androidx.lifecycle.viewmodel
    implementation libs.androidx.lifecycle.runtime
    implementation libs.androidx.lifecycle.common.java8
    implementation libs.androidx.lifecycle.extensions
    implementation libs.androidx.lifecycle.service
    implementation libs.androidx.lifecycle.runtime.livedata
    implementation libs.androidx.lifecycle.runtime.compose

    // Ongoing Activity
    implementation libs.wear.ongoing.activity

    // Hilt
    implementation libs.hilt.navigation.compose
    implementation libs.dagger.hilt.android
    kapt libs.dagger.hilt.android.compiler

//    implementation "com.google.dagger:hilt-android:2.39.1"
//    kapt "com.google.dagger:hilt-android-compiler:2.39.1"
//    implementation 'com.google.dagger:hilt-android:2.46'

    // Testing
    testImplementation libs.junit
    androidTestImplementation libs.test.ext.junit
    androidTestImplementation libs.test.espresso.core
    androidTestImplementation libs.compose.ui.test.junit4
    debugImplementation libs.compose.ui.tooling

    implementation 'androidx.activity:activity-compose:1.3.1'
}
