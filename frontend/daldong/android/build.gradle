buildscript {
    ext {
        compose_version = '1.2.0'
        wear_compose_version = '1.0.0'

    }
    ext.kotlin_version = '1.7.0'
    ext.hilt_version = '2.43.2'

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.3.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"
    }

//    plugins {
//        alias(libs.plugins.com.android.application) apply(false)
//        alias(libs.plugins.dagger.hilt) apply(false)
//        alias(libs.plugins.org.jetbrains.kotlin.android) apply(false)
//    }
}

rootProject.buildDir = '../build'
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}
subprojects {
    project.evaluationDependsOn(':app')
}

subprojects {
    project.evaluationDependsOn(':wear')
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}

// start of Gradle 서명 구성
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('app/key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def wearKeystoreProperties = new Properties()
def wearKeystorePropertiesFile = rootProject.file('wear/key.properties')
if (wearKeystorePropertiesFile.exists()) {
    wearKeystoreProperties.load(new FileInputStream(wearKeystorePropertiesFile))
}
// end of Gradle 서명 구성